version: '3.4'

networks:
  dev:
    driver: bridge

services:
  basketdb:
    container_name: basketdb
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    networks:
      - dev

  Shopo_DB:
    container_name: Shopo_DB
    image: postgres:latest
    ports:
      - "5432:5432"
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=CatalogDb
    networks:
      - dev

  accountapi:
    container_name: accountapi
    image: ${DOCKER_REGISTRY-}accountapi
    build:
      context: .
      dockerfile: Backend/Services/Accounts/AccountApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionString=Host=Shopo_DB;port=5432;database=AccountDb;username=postgres;password=postgres;Pooling=true;"
    depends_on:
      - Shopo_DB
    networks:
      - dev

  basketapi:
    container_name: basketapi
    image: ${DOCKER_REGISTRY-}basketapi
    build:
      context: .
      dockerfile: Backend/Services/Baskets/BasketApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "CacheSettings:ConnectionString=basketdb:6379"
    depends_on:
      - basketdb
    networks:
      - dev

  catalogapi:
    container_name: catalogapi
    image: ${DOCKER_REGISTRY-}catalogapi
    build:
      context: .
      dockerfile: Backend/Services/Catalog/CatalogApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionString=Host=Shopo_DB;port=5432;database=CatalogDb;username=postgres;password=postgres;Pooling=true;"
    depends_on:
      - Shopo_DB
    networks:
      - dev

  apigateway:
    container_name: apigateway
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: Backend/Gateway/apigateway/Dockerfile
    depends_on:
      - catalogapi
    ports:
      - "8000:80"
    networks:
      - dev
