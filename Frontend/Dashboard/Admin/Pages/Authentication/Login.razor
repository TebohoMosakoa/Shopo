@page "/login"
@using Admin.DTOs.Authentication;
@using Admin.Services.Authentication;

<div class="card o-hidden border-0 shadow-lg my-5">
    <div class="card-body p-0">
        @if (ShowAuthError)
        {
            <div class="alert alert-danger" role="alert">
                <p>@Error</p>
            </div>
        }
        <!-- Nested Row within Card Body -->
        <div class="row">
            <div class="col-lg-6 d-none d-lg-block bg-login-image"></div>
            <div class="col-lg-6">
                <div class="p-5">
                    <div class="text-center">
                        <h1 class="h4 text-gray-900 mb-4">Welcome Back!</h1>
                    </div>
                    <EditForm Model="_userForAuthentication" OnValidSubmit="ExecuteLogin" class="card card-body bg-light mt-5">
                        <DataAnnotationsValidator />
                        <div class="form-group">
                            <input type="email" class="form-control form-control-user"
                                   @bind="_userForAuthentication.Email" aria-describedby="emailHelp"
                                   placeholder="Enter Email Address...">
                             <ValidationMessage For="@(() => _userForAuthentication.Email)" />
                        </div>
                        <div class="form-group">
                            <input type="password" class="form-control form-control-user"
                                   @bind="_userForAuthentication.Password" placeholder="Password">
                            <ValidationMessage For="@(() => _userForAuthentication.Password)" />
                        </div>
                        <div class="form-group">
                            <div class="custom-control custom-checkbox small">
                                <input type="checkbox" class="custom-control-input" id="customCheck">
                                <label class="custom-control-label" for="customCheck">
                                    Remember
                                    Me
                                </label>
                            </div>
                        </div>
                        <button type="submit" class="btn btn-primary btn-user btn-block">Login</button>
                        <hr>
                        <a href="index.html" class="btn btn-google btn-user btn-block">
                            <i class="fab fa-google fa-fw"></i> Login with Google
                        </a>
                        <a href="index.html" class="btn btn-facebook btn-user btn-block">
                            <i class="fab fa-facebook-f fa-fw"></i> Login with Facebook
                        </a>
                    </EditForm>
                    <hr>
                    <div class="text-center">
                        <a class="small" href="/registration">Create an Account!</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private UserForAuthenticationDto _userForAuthentication = new UserForAuthenticationDto();
    [Inject]
    public IAuthenticationService AuthenticationService { get; set; }
    [Inject]
    public NavigationManager NavigationManager { get; set; }
    public bool ShowAuthError { get; set; }
    public string Error { get; set; }
    public async Task ExecuteLogin()
    {
        ShowAuthError = false;
        var result = await AuthenticationService.Login(_userForAuthentication);
        if (!result.IsAuthSuccessful)
        {
            Error = result.ErrorMessage;
            ShowAuthError = true;
        }
        else
        {
            NavigationManager.NavigateTo("/");
        }
    }
}
