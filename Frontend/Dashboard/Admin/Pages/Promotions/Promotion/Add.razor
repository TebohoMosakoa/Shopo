@page "/add-promotion"
@using Admin.Components;
@using Admin.Models;
@using Admin.Services;
@using Supabase;

<section class="content-main">
    <div class="row">
        <EditForm Model="_promotion" OnSubmit="CreatePromotion">
            <div class="col-9">
                <div class="content-header">
                    <h2 class="content-title">Create Promotion</h2>
                    <div>
                        <button class="btn btn-md rounded font-sm hover-up" type="submit">Create</button>
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="card mb-4">
                    <div class="card-body">
                        <div>
                            <InputFile OnChange="@HandleSelected" />
                        </div>
                    </div>
                </div> <!-- card end// -->
                <div class="card mb-4">
                    <div class="card-body">
                        <div class="mb-4">
                            <label class="form-label">Code</label>
                            <input type="text" placeholder="Type here" class="form-control" @bind="_promotion.Code">
                        </div>
                        <div class="mb-4">
                            <label class="form-label">Title</label>
                            <input type="text" placeholder="Type here" class="form-control" @bind="_promotion.Name">
                        </div>
                         <div class="mb-4">
                            <label class="form-label">Percentage</label>
                            <input type="text" placeholder="Type here" class="form-control" @bind="_promotion.Amount">
                        </div>
                        <div class="mb-4">
                            <label class="form-label">Description</label>
                            <textarea type="text" placeholder="Type here" class="form-control" @bind="_promotion.Description" />
                        </div>
                    </div>
                </div> <!-- card end// -->
            </div>
        </EditForm>
    </div>
    <SuccessNotification @ref="_notification" />
</section>

@code {
    private Promotion _promotion = new Promotion();
    private SuccessNotification _notification;
    [Inject]
    private PromotionRepository _service { get; set; }
    [Inject]
    public NavigationManager NavigationManager { get; set; }

    private async Task HandleSelected(InputFileChangeEventArgs e)
    {
        Client client = new Client(
        "https://ssofxpefzklnnhguydwz.supabase.co",
        "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNzb2Z4cGVmemtsbm5oZ3V5ZHd6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE2OTAwNTA5MTIsImV4cCI6MjAwNTYyNjkxMn0.6j-lmzZ7_R3P5ODVKvXPgPhfT-Tn8u8a3PGmKsivi3A",
        new SupabaseOptions
            {
                AutoRefreshToken = true,
                AutoConnectRealtime = true,
            });

        var imageFile = e.File;
        if (imageFile == null)
            return;
        var resizedFile = await imageFile.RequestImageFileAsync("image/png", 300, 500);
        using (var file = resizedFile.OpenReadStream(resizedFile.Size))
        {
            var memoryStream = new MemoryStream();
            await file.CopyToAsync(memoryStream);
            var lastIndexOfDot = imageFile.Name.LastIndexOf('.');

            string extension = imageFile.Name.Substring(lastIndexOfDot + 1);
            Guid uniqueID = Guid.NewGuid();

            string name = $"spane-{uniqueID}.{extension}";

            await client.Storage.From("spane-images").Upload(
                memoryStream.ToArray(), name);

            string url = client.Storage.From("spane-images").GetPublicUrl(name, null);
            _promotion.Image = url;
        }
    }

    public async Task CreatePromotion()
    {
        await _service.Add("Promotions", _promotion);
        _notification.Show();
        NavigationManager.NavigateTo("/Promotions");
    }
}
